# Generated by Django 4.0.3 on 2022-04-15 18:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('device', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название сооружения')),
                ('description', models.TextField(blank=True, max_length=200, null=True, verbose_name='Описание сооружения')),
                ('floor', models.IntegerField(default=1, verbose_name='Количество этажей включая подвал')),
            ],
            options={
                'verbose_name': 'Сооружение',
                'verbose_name_plural': 'Сооружения',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ControlInterface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Наименование входа/выхода/интерфейса')),
                ('description', models.TextField(blank=True, max_length=200, null=True, verbose_name='Описание входа/выхода/интерфейса')),
                ('voltage', models.IntegerField(default=0, verbose_name='Напряжение. Если есть на выходе')),
                ('current', models.IntegerField(default=0, verbose_name='Потребление тока')),
                ('start_current', models.IntegerField(default=0, verbose_name='Стартовый ток')),
            ],
            options={
                'verbose_name': 'Вход/выход/интерфейс АВТОМАТИЗИРУЕМОГО ОБОРУДОВАНИЯ',
                'verbose_name_plural': 'Входы/выходы/интерфейсы АВТОМАТИЗИРУЕМОГО ОБОРУДОВАНИЯ',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(max_length=200, verbose_name='Описание')),
                ('address', models.CharField(max_length=150, verbose_name='Место нахождения')),
                ('date_create', models.DateField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='houses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Загородный дом с участком',
                'verbose_name_plural': 'Загородные дома с уастком',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Наименование места устанвки')),
                ('description', models.TextField(max_length=200, verbose_name='Описание места устанвки')),
            ],
            options={
                'verbose_name': 'Место установки',
                'verbose_name_plural': 'Места установки',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Тег')),
                ('color', models.CharField(max_length=7, verbose_name='Цвет в HEX')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='Уникальный слаг')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Yard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.TextField(blank=True, max_length=200, null=True, verbose_name='Описание')),
                ('size', models.CharField(max_length=150, verbose_name='Размер уастка')),
                ('house', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='yard', to='home.house', verbose_name='Дом на участке')),
            ],
            options={
                'verbose_name': 'Двор',
                'verbose_name_plural': 'Дворы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название комнаты')),
                ('description', models.TextField(blank=True, max_length=200, null=True, verbose_name='Описание комнаты')),
                ('floor', models.IntegerField(default=1, verbose_name='На каком этаже находится')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='home.building', verbose_name='Строение')),
            ],
            options={
                'verbose_name': 'Комната',
                'verbose_name_plural': 'Комнаты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('SEN', 'Сенсор/датчик'), ('S_PAR', 'Контролируемый параметр'), ('EQUIPM', 'Управляемое устройство'), ('S_EQUIPM', 'Управляемое устройство с обратной связью')], default='EQUIPM', max_length=8)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Наименование оборудования')),
                ('description', models.TextField(blank=True, max_length=200, null=True, verbose_name='Описание оборудования')),
                ('voltage', models.IntegerField(default=0, verbose_name='Вольтаж. Без учета управляющего напряжения')),
                ('current', models.IntegerField(default=0, verbose_name='Потребление тока')),
                ('start_current', models.IntegerField(blank=True, default=0, null=True, verbose_name='Ствртовый ток')),
                ('interface', models.ManyToManyField(blank=True, related_name='equipments', to='device.pins', verbose_name='Интерфейс управления')),
                ('location', models.ManyToManyField(blank=True, related_name='equipments', to='home.location', verbose_name='Где может быть установлен')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipments', to='home.room', verbose_name='Помещение в котором установлен')),
                ('specific', models.ManyToManyField(blank=True, related_name='equipments', to='device.smartsystem', verbose_name='К какой системе относится')),
                ('tag', models.ManyToManyField(blank=True, related_name='equipments', to='home.tag', verbose_name='Теги')),
            ],
            options={
                'verbose_name': 'Оборудование',
                'verbose_name_plural': 'Оборудование',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='building',
            name='house',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buildings', to='home.house', verbose_name='Дом на участке'),
        ),
    ]
